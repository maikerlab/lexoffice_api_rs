openapi: "3.0.2"
info:
  title: lexoffice Public API
  version: "1.0"
servers:
  - url: https://api.lexoffice.io/v1
security:
  - ApiKeyAuth: []
paths:
  /contact/{id}:
    get:
      summary: Find contact by ID
      tags:
        - Contacts
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
  /countries:
    get:
      summary: Retrieve list of countries
      tags:
        - Countries
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Country"
  /credit-notes/{id}:
    get:
      summary: Find credit note by ID
      tags:
        - Credit Notes
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditNote"
  /delivery-notes/{id}:
    get:
      summary: Find delivery note by ID
      tags:
        - Delivery Notes
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryNote"
  /down-payment-invoices/{id}:
    get:
      summary: Find a down payment invoice by ID
      tags:
        - Down Payment Invoices
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DownPaymentInvoice"
  /dunnings/{id}:
    get:
      summary: Find a dunning by ID
      tags:
        - Dunnings
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dunning"
  /order-confirmations/{id}:
    get:
      summary: Find an order confirmation by ID
      tags:
        - Order Confirmations
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderConfirmation"
  /payments/{voucherId}:
    get:
      summary: Find a payment by Voucher ID
      tags:
        - Payments
      parameters:
        - in: path
          name: voucherId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
  /payment-conditions:
    get:
      summary: Retrieve payment conditions configured in lexoffice
      tags:
        - Payments
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PostingCategory"
  /posting-categories:
    get:
      summary: Retrieve payment conditions configured in lexoffice
      tags:
        - Posting Categories
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PaymentConditions"
  /profile:
    get:
      summary: Get basic profile information about connected lexoffice account
      tags:
        - Profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
  /quotations/{id}:
    get:
      summary: Find a quotation by ID
      tags:
        - Quotations
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quotation"
  /voucherlist:
    get:
      summary: Retrieve Voucherlist
      tags:
        - Vouchers
      parameters:
        - in: query
          name: voucherType
          schema:
            type: string
            enum:
              - any
              - salesinvoice
              - salescreditnote
              - purchaseinvoice
              - purchasecreditnote
              - invoice
              - downpaymentinvoice
              - creditnote
              - orderconfirmation
              - quotation
              - deliverynote
          required: true
        - in: query
          name: voucherStatus
          schema:
            type: string
            enum:
              - any
              - draft
              - open
              - paid
              - paidoff
              - voided
              - transferred
              - sepadebit
              - overdue
              - accepted
              - rejected
          required: true
        - in: query
          name: archived
          schema:
            type: boolean
        - in: query
          name: contactId
          schema:
            type: string
            format: uuid
        - in: query
          name: voucherDateFrom
          schema:
            type: string
            format: date
        - in: query
          name: voucherDateTo
          schema:
            type: string
            format: date
        - in: query
          name: createdDateFrom
          schema:
            type: string
            format: date
        - in: query
          name: createdDateTo
          schema:
            type: string
            format: date
        - in: query
          name: updatedDateFrom
          schema:
            type: string
            format: date
        - in: query
          name: updatedDateTo
          schema:
            type: string
            format: date
        - in: query
          name: voucherNumber
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
        - in: query
          name: size
          schema:
            type: integer
            default: 25
            maximum: 250
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - voucherDate
              - voucherDate,ASC
              - voucherDate,DESC
              - voucherNumber
              - voucherNumber,ASC
              - voucherNumber,DESC
              - createdDate
              - createdDate,ASC
              - createdDate,DESC
              - updatedDate
              - updatedDate,ASC
              - updatedDate,DESC
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VoucherList"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMsg"
              example:
                message: Unauthorized
  /vouchers/{id}:
    get:
      summary: Find a voucher by ID
      tags:
        - Vouchers
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Voucher"
  /vouchers:
    get:
      summary: Filter voucher by voucherNumber
      tags:
        - Vouchers
      parameters:
        - in: query
          name: voucherNumber
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Voucher"
  /invoices/{id}:
    get:
      summary: Find invoice by ID
      tags:
        - Invoices
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMsg"
              example:
                message: Unauthorized
components:
  securitySchemes:
    ApiKeyAuth:
      type: http
      scheme: bearer
      bearerFormat: string
  schemas:
    VoucherList:
      type: object
      required:
        - content
        - first
        - last
        - totalPages
        - totalElements
        - numberOfElements
        - size
        - number
        - sort
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/VoucherlistVoucher"
        first:
          type: boolean
        last:
          type: boolean
        totalPages:
          type: integer
        totalElements:
          type: integer
        numberOfElements:
          type: integer
        size:
          type: integer
        number:
          type: integer
        sort:
          type: array
          items:
            $ref: "#/components/schemas/SortProperties"
    VoucherlistVoucher:
      required:
        - id
        - voucherType
        - voucherStatus
        - voucherNumber
        - voucherDate
        - createdDate
        - updatedDate
        - contactName
        - currency
        - archived
      type: object
      properties:
        id:
          type: string
          format: uuid
        voucherType:
          type: string
          description: Voucher Type
          enum:
            - salesinvoice
            - salescreditnote
            - purchaseinvoice
            - purchasecreditnote
            - invoice
            - downpaymentinvoice
            - creditnote
            - orderconfirmation
            - quotation
            - deliverynote
        voucherStatus:
          type: string
          description: Status
          enum:
            - draft
            - open
            - paid
            - paidoff
            - voided
            - transferred
            - sepadebit
            - overdue
            - accepted
            - rejected
        voucherNumber:
          type: string
        voucherDate:
          type: string
          format: date-time
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
        contactId:
          type: string
          format: uuid
          nullable: true
        contactName:
          type: string
        totalAmount:
          type: number
        openAmount:
          type: number
        currency:
          type: string
          enum: [EUR]
        archived:
          type: boolean
    Voucher:
      required:
        - id
        - type
        - voucherStatus
        - voucherDate
      type: object
      properties:
        id:
          type: string
          format: uuid
        organizationId:
          type: string
          format: uuid
        type:
          type: string
          description: Voucher Type
          enum:
            - salesinvoice
            - salescreditnote
            - purchaseinvoice
            - purchasecreditnote
        voucherStatus:
          type: string
          description: Status
          enum:
            - open
            - paid
            - paidoff
            - voided
            - transferred
            - sepadebit
            - unchecked
        voucherNumber:
          type: string
        voucherDate:
          type: string
          format: date-time
        shippingDate:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
        totalGrossAmount:
          type: number
        totalTaxAmount:
          type: number
        taxType:
          type: string
          enum:
            - net
            - gross
        useCollectiveContact:
          type: boolean
        contactId:
          type: string
          format: uuid
        remark:
          type: string
        voucherItems:
          type: array
          items:
            properties:
              amount:
                type: number
              taxAmount:
                type: number
              taxRatePercent:
                type: number
              categoryId:
                type: string
                format: uuid
        files:
          type: array
          items:
            $ref: "#/components/schemas/File"
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        version:
          type: integer
    Invoice:
      type: object
      required:
        - id
        - createdDate
        - updatedDate
        - version
        - language
        - archived
        - voucherStatus
        - voucherNumber
        - voucherDate
        - dueDate
        - address
        - lineItems
        - totalPrice
        - closingInvoice
      properties:
        id:
          type: string
          format: uuid
        organizationId:
          type: string
          format: uuid
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        version:
          type: integer
        language:
          type: string
          enum: [de, en]
        archived:
          type: boolean
        voucherStatus:
          type: string
          enum: [draft, open, paid, voided]
        voucherNumber:
          type: string
        voucherDate:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
        address:
          $ref: "#/components/schemas/VoucherAddress"
        xRechnung:
          type: object
          nullable: true
          properties:
            buyerReference:
              type: string
        lineItems:
          type: array
          items:
            $ref: "#/components/schemas/LineItem"
        totalPrice:
          $ref: "#/components/schemas/TotalPrice"
        taxAmounts:
          type: array
          items:
            $ref: "#/components/schemas/TaxAmount"
        taxConditions:
          $ref: "#/components/schemas/TaxConditions"
        paymentConditions:
          $ref: "#/components/schemas/PaymentConditions"
        shippingConditions:
          $ref: "#/components/schemas/ShippingConditions"
        closingInvoice:
          type: boolean
        claimedGrossAmount:
          type: number
          nullable: true
        downPaymentDeductions:
          type: object
          nullable: true
        recurringTemplateId:
          type: string
          nullable: true
        relatedVouchers:
          type: array
          items:
            $ref: "#/components/schemas/RelatedVoucher"
        title:
          type: string
        introduction:
          type: string
        remark:
          type: string
        files:
          $ref: "#/components/schemas/File"
    Address:
      type: object
      properties:
        supplement:
          type: string
        street:
          type: string
        zip:
          type: string
        city:
          type: string
        countryCode:
          type: string
    VoucherAddress:
      type: object
      description: Address for CreditNote/DeliveryNote/Invoice
      required:
        - name
        - countryCode
      properties:
        contactId:
          type: string
          format: uuid
        name:
          type: string
        supplement:
          type: string
          nullable: true
        street:
          type: string
        city:
          type: string
        zip:
          type: string
        countryCode:
          type: string
        contactPerson:
          type: string
    Contact:
      type: object
      required:
        - id
        - version
        - archived
      properties:
        id:
          type: string
          format: uuid
        organizationId:
          type: string
          format: uuid
        version:
          type: integer
        roles:
          $ref: "#/components/schemas/RolesDetails"
        company:
          $ref: "#/components/schemas/CompanyDetails"
        person:
          $ref: "#/components/schemas/PersonDetails"
        addresses:
          type: object
          properties:
            billing:
              type: array
              items:
                $ref: "#/components/schemas/Address"
            shipping:
              type: array
              items:
                $ref: "#/components/schemas/Address"
        xRechnung:
          $ref: "#/components/schemas/XRechnung"
        emailAddresses:
          type: object
          properties:
            business:
              type: array
              items:
                type: string
            office:
              type: array
              items:
                type: string
            private:
              type: array
              items:
                type: string
            other:
              type: array
              items:
                type: string
        phoneNumbers:
          type: object
          properties:
            business:
              type: array
              items:
                type: string
            office:
              type: array
              items:
                type: string
            private:
              type: array
              items:
                type: string
            other:
              type: array
              items:
                type: string
        note:
          type: string
        archived:
          type: boolean
    Country:
      type: object
      required:
        - countryCode
      properties:
        countryCode:
          type: string
        countryNameDE:
          type: string
        countryNameEN:
          type: string
        taxClassification:
          type: string
    CreditNote:
      type: object
      required:
        - id
        - createdDate
        - updatedDate
        - version
        - language
        - archived
        - voucherStatus
        - voucherNumber
        - voucherDate
        - lineItems
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        organizationId:
          type: string
          format: uuid
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        version:
          type: integer
          nullable: false
        language:
          type: string
          enum: [de, en]
        archived:
          type: boolean
        voucherStatus:
          type: string
          enum: [draft, open, paid, voided]
        voucherNumber:
          type: string
        voucherDate:
          type: string
          format: date-time
        address:
          $ref: "#/components/schemas/VoucherAddress"
        lineItems:
          type: array
          items:
            $ref: "#/components/schemas/LineItem"
        totalPrice:
          $ref: "#/components/schemas/TotalPrice"
        taxAmounts:
          type: array
          items:
            $ref: "#/components/schemas/TaxAmount"
        taxConditions:
          $ref: "#/components/schemas/TaxConditions"
        relatedVouchers:
          type: array
          items:
            $ref: "#/components/schemas/RelatedVoucher"
        title:
          type: string
          nullable: true
        introduction:
          type: string
          nullable: true
        remark:
          type: string
          nullable: true
        files:
          $ref: "#/components/schemas/File"
    DeliveryNote:
      type: object
      required:
        - id
        - createdDate
        - updatedDate
        - version
        - language
        - archived
        - voucherStatus
        - voucherNumber
        - voucherDate
        - lineItems
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        organizationId:
          type: string
          format: uuid
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        version:
          type: integer
          nullable: false
        language:
          type: string
          enum: [de, en]
        archived:
          type: boolean
        voucherStatus:
          type: string
          enum: [draft, open, paid, voided]
        voucherNumber:
          type: string
        voucherDate:
          type: string
          format: date-time
        address:
          $ref: "#/components/schemas/VoucherAddress"
        lineItems:
          type: array
          items:
            $ref: "#/components/schemas/LineItem"
        taxConditions:
          $ref: "#/components/schemas/TaxConditions"
        relatedVouchers:
          type: array
          items:
            $ref: "#/components/schemas/RelatedVoucher"
        title:
          type: string
          nullable: true
        introduction:
          type: string
          nullable: true
        remark:
          type: string
          nullable: true
        deliveryTerms:
          type: string
          nullable: true
        files:
          $ref: "#/components/schemas/File"
    DownPaymentInvoice:
      type: object
      required:
        - id
        - createdDate
        - updatedDate
        - version
        - language
        - archived
        - voucherStatus
        - voucherNumber
        - voucherDate
        - lineItems
      properties:
        id:
          type: string
          format: uuid
        organizationId:
          type: string
          format: uuid
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        version:
          type: integer
        language:
          type: string
          enum: [de, en]
        archived:
          type: boolean
        voucherStatus:
          type: string
          enum: [draft, open, paid, voided]
        voucherNumber:
          type: string
        voucherDate:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
        address:
          $ref: "#/components/schemas/VoucherAddress"
        lineItems:
          type: array
          items:
            $ref: "#/components/schemas/LineItem"
        totalPrice:
          $ref: "#/components/schemas/TotalPrice"
        taxAmounts:
          type: array
          items:
            $ref: "#/components/schemas/TaxAmount"
        taxConditions:
          $ref: "#/components/schemas/TaxConditions"
        paymentConditions:
          $ref: "#/components/schemas/PaymentConditions"
        shippingConditions:
          $ref: "#/components/schemas/ShippingConditions"
        closingInvoiceId:
          type: string
          format: uuid
          nullable: true
        relatedVouchers:
          type: array
          items:
            $ref: "#/components/schemas/RelatedVoucher"
        title:
          type: string
          nullable: true
        introduction:
          type: string
          nullable: true
        remark:
          type: string
          nullable: true
        files:
          $ref: "#/components/schemas/File"
    Dunning:
      type: object
      required:
        - id
        - createdDate
        - updatedDate
        - version
        - language
        - archived
        - voucherStatus
        - voucherNumber
        - voucherDate
        - lineItems
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        organizationId:
          type: string
          format: uuid
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        version:
          type: integer
          nullable: false
        language:
          type: string
          enum: [de, en]
        archived:
          type: boolean
        voucherStatus:
          type: string
          enum: [draft, open, paid, voided]
        voucherNumber:
          type: string
        voucherDate:
          type: string
          format: date-time
        address:
          $ref: "#/components/schemas/VoucherAddress"
        lineItems:
          type: array
          items:
            $ref: "#/components/schemas/LineItem"
        taxConditions:
          $ref: "#/components/schemas/TaxConditions"
        shippingConditions:
          $ref: "#/components/schemas/ShippingConditions"
        relatedVouchers:
          type: array
          items:
            $ref: "#/components/schemas/RelatedVoucher"
        title:
          type: string
          nullable: true
        introduction:
          type: string
          nullable: true
        remark:
          type: string
          nullable: true
        files:
          $ref: "#/components/schemas/File"
    XRechnung:
      type: object
      properties:
        buyerReference:
          type: string
        vendorNumberAtCustomer:
          type: string
    RolesDetails:
      type: object
      properties:
        customer:
          $ref: "#/components/schemas/CustomerOrVendorDetails"
        vendor:
          $ref: "#/components/schemas/CustomerOrVendorDetails"
    CompanyDetails:
      type: object
      properties:
        allowTaxFreeInvoices:
          type: boolean
          nullable: false
        name:
          type: string
          nullable: false
        taxNumber:
          type: string
        vatRegistrationId:
          type: string
        contactPersons:
          type: array
          items:
            $ref: "#/components/schemas/CompanyContactPerson"
    PersonDetails:
      type: object
      properties:
        salutation:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    PostingCategory:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
          enum:
            - income
            - outgo
        contactRequired:
          type: boolean
        splitAllowed:
          type: boolean
        groupName:
          type: string
    CompanyContactPerson:
      type: object
      properties:
        salutation:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        primary:
          type: boolean
        emailAddress:
          type: string
        phoneNumber:
          type: string
    CustomerOrVendorDetails:
      type: object
      nullable: true
      properties:
        number:
          type: number
          nullable: false
    LineItem:
      type: object
      required:
        - type
        - name
        - quantity
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [service, material, custom, text]
        name:
          type: string
        description:
          type: string
        quantity:
          type: number
        unitName:
          type: string
        unitPrice:
          $ref: "#/components/schemas/UnitPrice"
        discountPercentage:
          type: number
        lineItemAmount:
          type: number
    LineItemQuotation:
      type: object
      required:
        - type
        - name
        - description
        - quantity
        - unitName
        - unitPrice
        - discountPercentage
        - lineItemAmount
      properties:
        id:
          # only available at type 'service' or 'material'
          type: string
          format: uuid
        type:
          type: string
          enum: [service, material, custom, text]
        name:
          type: string
        description:
          type: string
        quantity:
          type: number
        unitName:
          type: string
        unitPrice:
          $ref: "#/components/schemas/UnitPrice"
        discountPercentage:
          type: number
        lineItemAmount:
          type: number
        subItems:
          type: array
          items:
            $ref: "#/components/schemas/LineItemQuotation"
        optional:
          type: boolean
        alternative:
          type: boolean
    OrderConfirmation:
      type: object
      required:
        - id
        - createdDate
        - updatedDate
        - version
        - language
        - archived
        - voucherStatus
        - voucherNumber
        - voucherDate
        - lineItems
      properties:
        id:
          type: string
          format: uuid
        organizationId:
          type: string
          format: uuid
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        version:
          type: integer
        language:
          type: string
          enum: [de, en]
        archived:
          type: boolean
        voucherStatus:
          type: string
          enum: [draft, open, paid, voided]
        voucherNumber:
          type: string
        voucherDate:
          type: string
          format: date-time
        address:
          $ref: "#/components/schemas/VoucherAddress"
        lineItems:
          type: array
          items:
            $ref: "#/components/schemas/LineItem"
        totalPrice:
          $ref: "#/components/schemas/TotalPrice"
        taxAmounts:
          type: array
          items:
            $ref: "#/components/schemas/TaxAmount"
        taxConditions:
          $ref: "#/components/schemas/TaxConditions"
        paymentConditions:
          $ref: "#/components/schemas/PaymentConditions"
        shippingConditions:
          $ref: "#/components/schemas/ShippingConditions"
        relatedVouchers:
          type: array
          items:
            $ref: "#/components/schemas/RelatedVoucher"
        title:
          type: string
          nullable: true
        introduction:
          type: string
          nullable: true
        remark:
          type: string
          nullable: true
        deliveryTerms:
          type: string
          nullable: true
        files:
          $ref: "#/components/schemas/File"
    Quotation:
      type: object
      required:
        - id
        - createdDate
        - updatedDate
        - version
        - language
        - archived
        - voucherStatus
        - voucherNumber
        - voucherDate
        - lineItems
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        organizationId:
          type: string
          format: uuid
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        version:
          type: integer
          nullable: false
        language:
          type: string
          enum: [de, en]
        archived:
          type: boolean
        voucherStatus:
          type: string
          enum: [draft, open, paid, voided]
        voucherNumber:
          type: string
        voucherDate:
          type: string
          format: date-time
        address:
          $ref: "#/components/schemas/VoucherAddress"
        lineItems:
          type: array
          items:
            $ref: "#/components/schemas/LineItemQuotation"
        totalPrice:
          $ref: "#/components/schemas/TotalPrice"
        taxAmounts:
          type: array
          items:
            $ref: "#/components/schemas/TaxAmount"
        taxConditions:
          $ref: "#/components/schemas/TaxConditions"
        paymentConditions:
          $ref: "#/components/schemas/PaymentConditions"
        relatedVouchers:
          type: array
          items:
            $ref: "#/components/schemas/RelatedVoucher"
        title:
          type: string
          nullable: true
        introduction:
          type: string
          nullable: true
        remark:
          type: string
          nullable: true
        files:
          $ref: "#/components/schemas/File"
    UnitPrice:
      type: object
      required:
        - currency
        - netAmount
        - grossAmount
        - taxRatePercentage
      properties:
        currency:
          type: string
          enum: [EUR]
        netAmount:
          type: number
        grossAmount:
          type: number
        taxRatePercentage:
          type: number
    UserProfile:
      type: object
      required:
        - organizationId
        - companyName
        - created
        - connectionId
        - taxType
        - distanceSalesPrinciple
        - businessFeatures
        - smallBusiness
      properties:
        organizationId:
          type: string
          format: uuid
        companyName:
          type: string
        created:
          type: object
          properties:
            userId:
              type: string
              format: uuid
            userName:
              type: string
            userEmail:
              type: string
            date:
              type: string
              format: date-time
        connectionId:
          type: string
          format: uuid
        taxType:
          type: string
          enum:
            - net
            - gross
            - vatfree
        distanceSalesPrinciple:
          type: string
          enum:
            - ORIGIN
            - DESTINATION
          nullable: true
        businessFeatures:
          type: array
          items:
            type: string
            enum:
              - INVOICING
              - INVOICING_PRO
              - BOOKKEEPING
        smallBusiness:
          type: boolean
    TotalPrice:
      type: object
      required:
        - currency
        - totalNetAmount
        - totalGrossAmount
        - totalTaxAmount
      properties:
        currency:
          type: string
          enum: [EUR]
        totalNetAmount:
          type: number
        totalGrossAmount:
          type: number
        totalTaxAmount:
          type: number
        totalDiscountAbsolute:
          type: number
        totalDiscountPercentage:
          type: number
    TaxAmount:
      type: object
      required:
        - taxRatePercentage
        - taxAmount
        - netAmount
      properties:
        taxRatePercentage:
          type: number
        taxAmount:
          type: number
        netAmount:
          type: number
    TaxConditions:
      type: object
      required:
        - taxType
      properties:
        taxType:
          type: string
          enum:
            - net
            - gross
            - vatfree
            - intraCommunitySupply
            - constructionService13b
            - externalService13b
            - thirdPartyCountryService
            - thirdPartyCountryDelivery
            - photovoltaicEquipment
        taxSubType:
          type: string
          enum:
            - distanceSales
            - electronicServices
          nullable: true
        taxTypeNote:
          type: string
          nullable: true
    Payment:
      type: object
      required:
        - openAmount
        - currency
        - paymentStatus
        - voucherType
        - voucherStatus
        - paymentItems
      properties:
        openAmount:
          type: number
        currency:
          type: string
          enum: [EUR]
        paymentStatus:
          type: string
          enum:
            - balanced
            - openRevenue
            - openExpense
        voucherType:
          type: string
          enum:
            - salesinvoice
            - salescreditnote
            - purchaseinvoice
            - purchasecreditnote
            - invoice
            - downpaymentinvoice
            - creditnote
        voucherStatus:
          type: string
          enum:
            - open
            - paid
            - paidoff
            - voided
            - transferred
            - sepadebit
        paidDate:
          type: string
          format: date-time
          nullable: true
        paymentItems:
          type: array
          items:
            $ref: "#/components/schemas/PaymentItem"
    PaymentConditions:
      type: object
      properties:
        paymentTermLabel:
          type: string
        paymentTermLabelTemplate:
          type: string
        paymentTermDuration:
          type: integer
        paymentDiscountConditions:
          type: object
          properties:
            discountPercentage:
              type: number
            discountRange:
              type: integer
    OrganizationPaymentConditions:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
        organizationDefault:
          type: boolean
        paymentTermLabelTemplate:
          type: string
        paymentTermDuration:
          type: integer
        paymentDiscountConditions:
          type: object
          properties:
            discountPercentage:
              type: number
            discountRange:
              type: integer
    PaymentItem:
      type: object
      required:
        - paymentItemType
        - postingDate
        - amount
        - currency
      properties:
        paymentItemType:
          type: string
          enum:
            - partPaymentFinancialTransaction
            - partPaymentCreditNote
            - partPaymentCashBox
            - manualPayment
            - cashDiscount
            - dunningCosts
            - currencyConversion
        postingDate:
          type: string
          format: date-time
        amount:
          type: number
        currency:
          type: string
          enum: [EUR]
    ShippingConditions:
      type: object
      required:
        - shippingType
      properties:
        shippingDate:
          type: string
          format: date-time
        shippingEndDate:
          type: string
          format: date-time
        shippingType:
          type: string
          enum:
            - service
            - serviceperiod
            - delivery
            - deliveryperiod
            - none
    RelatedVoucher:
      type: object
      required:
        - id
        - voucherNumber
        - voucherType
      properties:
        id:
          type: string
          format: uuid
        voucherNumber:
          type: string
        voucherType:
          type: string
    File:
      type: object
      required:
        - documentFileId
      properties:
        documentFileId:
          type: string
    SortProperties:
      type: object
      required:
        - direction
        - property
        - ignoreCase
        - nullHandling
        - ascending
      properties:
        direction:
          type: string
        property:
          type: string
        ignoreCase:
          type: boolean
        nullHandling:
          type: string
        ascending:
          type: boolean
    ErrorMsg:
      type: object
      properties:
        message:
          type: string
          description: Error message
          example: An error has occurred
