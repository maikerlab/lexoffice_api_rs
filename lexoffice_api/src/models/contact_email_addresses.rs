/*
 * lexoffice Public API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContactEmailAddresses {
    #[serde(rename = "business", skip_serializing_if = "Option::is_none")]
    pub business: Option<Vec<String>>,
    #[serde(rename = "office", skip_serializing_if = "Option::is_none")]
    pub office: Option<Vec<String>>,
    #[serde(rename = "private", skip_serializing_if = "Option::is_none")]
    pub private: Option<Vec<String>>,
    #[serde(rename = "other", skip_serializing_if = "Option::is_none")]
    pub other: Option<Vec<String>>,
}

impl ContactEmailAddresses {
    pub fn new() -> ContactEmailAddresses {
        ContactEmailAddresses {
            business: None,
            office: None,
            private: None,
            other: None,
        }
    }
}

