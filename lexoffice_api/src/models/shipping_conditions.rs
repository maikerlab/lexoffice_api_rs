/*
 * lexoffice Public API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShippingConditions {
    #[serde(rename = "shippingDate", skip_serializing_if = "Option::is_none")]
    pub shipping_date: Option<String>,
    #[serde(rename = "shippingEndDate", skip_serializing_if = "Option::is_none")]
    pub shipping_end_date: Option<String>,
    #[serde(rename = "shippingType")]
    pub shipping_type: ShippingType,
}

impl ShippingConditions {
    pub fn new(shipping_type: ShippingType) -> ShippingConditions {
        ShippingConditions {
            shipping_date: None,
            shipping_end_date: None,
            shipping_type,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ShippingType {
    #[serde(rename = "service")]
    Service,
    #[serde(rename = "serviceperiod")]
    Serviceperiod,
    #[serde(rename = "delivery")]
    Delivery,
    #[serde(rename = "deliveryperiod")]
    Deliveryperiod,
    #[serde(rename = "none")]
    None,
}

impl Default for ShippingType {
    fn default() -> ShippingType {
        Self::Service
    }
}

