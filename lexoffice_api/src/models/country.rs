/*
 * lexoffice Public API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Country {
    #[serde(rename = "countryCode")]
    pub country_code: String,
    #[serde(rename = "countryNameDE", skip_serializing_if = "Option::is_none")]
    pub country_name_de: Option<String>,
    #[serde(rename = "countryNameEN", skip_serializing_if = "Option::is_none")]
    pub country_name_en: Option<String>,
    #[serde(rename = "taxClassification", skip_serializing_if = "Option::is_none")]
    pub tax_classification: Option<String>,
}

impl Country {
    pub fn new(country_code: String) -> Country {
        Country {
            country_code,
            country_name_de: None,
            country_name_en: None,
            tax_classification: None,
        }
    }
}

