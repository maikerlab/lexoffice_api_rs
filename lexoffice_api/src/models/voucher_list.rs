/*
 * lexoffice Public API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VoucherList {
    #[serde(rename = "content")]
    pub content: Vec<models::VoucherlistVoucher>,
    #[serde(rename = "first")]
    pub first: bool,
    #[serde(rename = "last")]
    pub last: bool,
    #[serde(rename = "totalPages")]
    pub total_pages: i32,
    #[serde(rename = "totalElements")]
    pub total_elements: i32,
    #[serde(rename = "numberOfElements")]
    pub number_of_elements: i32,
    #[serde(rename = "size")]
    pub size: i32,
    #[serde(rename = "number")]
    pub number: i32,
    #[serde(rename = "sort")]
    pub sort: Vec<models::SortProperties>,
}

impl VoucherList {
    pub fn new(content: Vec<models::VoucherlistVoucher>, first: bool, last: bool, total_pages: i32, total_elements: i32, number_of_elements: i32, size: i32, number: i32, sort: Vec<models::SortProperties>) -> VoucherList {
        VoucherList {
            content,
            first,
            last,
            total_pages,
            total_elements,
            number_of_elements,
            size,
            number,
            sort,
        }
    }
}

