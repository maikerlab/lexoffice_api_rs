/*
 * lexoffice Public API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserProfile {
    #[serde(rename = "organizationId")]
    pub organization_id: uuid::Uuid,
    #[serde(rename = "companyName")]
    pub company_name: String,
    #[serde(rename = "created")]
    pub created: Box<models::UserProfileCreated>,
    #[serde(rename = "connectionId")]
    pub connection_id: uuid::Uuid,
    #[serde(rename = "taxType")]
    pub tax_type: TaxType,
    #[serde(rename = "distanceSalesPrinciple", deserialize_with = "Option::deserialize")]
    pub distance_sales_principle: Option<DistanceSalesPrinciple>,
    #[serde(rename = "businessFeatures")]
    pub business_features: Vec<BusinessFeatures>,
    #[serde(rename = "smallBusiness")]
    pub small_business: bool,
}

impl UserProfile {
    pub fn new(organization_id: uuid::Uuid, company_name: String, created: models::UserProfileCreated, connection_id: uuid::Uuid, tax_type: TaxType, distance_sales_principle: Option<DistanceSalesPrinciple>, business_features: Vec<BusinessFeatures>, small_business: bool) -> UserProfile {
        UserProfile {
            organization_id,
            company_name,
            created: Box::new(created),
            connection_id,
            tax_type,
            distance_sales_principle,
            business_features,
            small_business,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TaxType {
    #[serde(rename = "net")]
    Net,
    #[serde(rename = "gross")]
    Gross,
    #[serde(rename = "vatfree")]
    Vatfree,
}

impl Default for TaxType {
    fn default() -> TaxType {
        Self::Net
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DistanceSalesPrinciple {
    #[serde(rename = "ORIGIN")]
    Origin,
    #[serde(rename = "DESTINATION")]
    Destination,
}

impl Default for DistanceSalesPrinciple {
    fn default() -> DistanceSalesPrinciple {
        Self::Origin
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BusinessFeatures {
    #[serde(rename = "INVOICING")]
    Invoicing,
    #[serde(rename = "INVOICING_PRO")]
    InvoicingPro,
    #[serde(rename = "BOOKKEEPING")]
    Bookkeeping,
}

impl Default for BusinessFeatures {
    fn default() -> BusinessFeatures {
        Self::Invoicing
    }
}

