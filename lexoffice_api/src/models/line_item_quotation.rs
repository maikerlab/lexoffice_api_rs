/*
 * lexoffice Public API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LineItemQuotation {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<uuid::Uuid>,
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "quantity")]
    pub quantity: f64,
    #[serde(rename = "unitName")]
    pub unit_name: String,
    #[serde(rename = "unitPrice")]
    pub unit_price: Box<models::UnitPrice>,
    #[serde(rename = "discountPercentage")]
    pub discount_percentage: f64,
    #[serde(rename = "lineItemAmount")]
    pub line_item_amount: f64,
    #[serde(rename = "subItems", skip_serializing_if = "Option::is_none")]
    pub sub_items: Option<Vec<models::LineItemQuotation>>,
    #[serde(rename = "optional", skip_serializing_if = "Option::is_none")]
    pub optional: Option<bool>,
    #[serde(rename = "alternative", skip_serializing_if = "Option::is_none")]
    pub alternative: Option<bool>,
}

impl LineItemQuotation {
    pub fn new(r#type: Type, name: String, description: String, quantity: f64, unit_name: String, unit_price: models::UnitPrice, discount_percentage: f64, line_item_amount: f64) -> LineItemQuotation {
        LineItemQuotation {
            id: None,
            r#type,
            name,
            description,
            quantity,
            unit_name,
            unit_price: Box::new(unit_price),
            discount_percentage,
            line_item_amount,
            sub_items: None,
            optional: None,
            alternative: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "service")]
    Service,
    #[serde(rename = "material")]
    Material,
    #[serde(rename = "custom")]
    Custom,
    #[serde(rename = "text")]
    Text,
}

impl Default for Type {
    fn default() -> Type {
        Self::Service
    }
}

