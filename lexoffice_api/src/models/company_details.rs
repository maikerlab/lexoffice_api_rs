/*
 * lexoffice Public API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CompanyDetails {
    #[serde(rename = "allowTaxFreeInvoices", skip_serializing_if = "Option::is_none")]
    pub allow_tax_free_invoices: Option<bool>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "taxNumber", skip_serializing_if = "Option::is_none")]
    pub tax_number: Option<String>,
    #[serde(rename = "vatRegistrationId", skip_serializing_if = "Option::is_none")]
    pub vat_registration_id: Option<String>,
    #[serde(rename = "contactPersons", skip_serializing_if = "Option::is_none")]
    pub contact_persons: Option<Vec<models::CompanyContactPerson>>,
}

impl CompanyDetails {
    pub fn new() -> CompanyDetails {
        CompanyDetails {
            allow_tax_free_invoices: None,
            name: None,
            tax_number: None,
            vat_registration_id: None,
            contact_persons: None,
        }
    }
}

